---
import './Sidebar.css';

import { type Percentage, type RmUnitType } from '../Types.ts';

/**
 * @module sidebar-l
 * @description
 * A custom element for placing two elements side-by-side. If space permits, the sidebar element has a set width, and the companion takes up the rest of the available horizontal space. If not, the elements are collapsed into a single column, each taking up 100% of the horizontal space.
 * @property {string} side=left Which element to treat as the sidebar (all values but "left" are considered "right")
 * @property {string} sideWidth Represents the width of the sidebar _when_ adjacent. If not set (`null`) it defaults to the sidebar's content width
 * @property {string} contentMin=50% A CSS **percentage** value. The minimum width of the content element in the horizontal configuration
 * @property {string} space=var(--s1) A CSS margin value representing the space between the two elements
 * @property {boolean} noStretch=false Make the adjacent elements adopt their natural height
 */

interface Props {
  side?: 'left' | 'right';
  sideWidth?: RmUnitType;
  contentMin?: Percentage;
  space?: RmUnitType;
  noStretch?: boolean;
}
const { side = 'left', ...rest } = Astro.props;
---

<sidebar-l side={side} {...rest}>
  <slot />
</sidebar-l>

<script src="./Sidebar.js"></script>
